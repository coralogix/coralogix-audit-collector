name: Audit-Logs-Coralogix-Image

on:
  push:
    branches:
      - master
    paths:
      - './Dockerfile'
      - './**.go'
      - './**.mod'
      - './**.sum'
      - '.github/workflows/image.yml'
  workflow_dispatch:

env:
  DOCKERHUB_REGISTRY: coralogixrepo/coralogix-audit-collector

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Golang
        uses: actions/setup-go@v3
        with:
          go-version: '1.19.5'
      - run: go test ./... -v
  build:
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      contents: write
      packages: write
      id-token: write
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      digest: ${{ steps.docker_build.outputs.digest }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: paulhatch/semantic-version@v5.0.2
        id: appVersion
        with:
          tag_prefix: "v"
          major_pattern: "(APP_MAJOR)"
          minor_pattern: "(APP_MINOR)"
          version_format: "${major}.${minor}.${patch}"
          change_path: "src/ main.go main_test.go .github/workflows/image.yml"
          bump_each_commit: true

      - name: Print version
        run: |
          echo ${{ steps.appVersion.outputs.version }} tag: ${{ steps.appVersion.outputs.version_tag }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ env.DOCKERHUB_REGISTRY }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.appVersion.outputs.version }}

      - name: Build And Push Image To Dockerhub
        uses: docker/build-push-action@v4
        id: docker_build
        with:
          cache-from: type=registry,ref=${{ env.DOCKERHUB_REGISTRY }}:buildcache
          cache-to: type=registry,ref=${{ env.DOCKERHUB_REGISTRY }}:buildcache,mode=max
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
      - name: Sign the images with GitHub OIDC Token
        run: cosign sign --yes ${TAGS}
        env:
          TAGS: ${{ env.DOCKERHUB_REGISTRY }}@${{ steps.docker_build.outputs.digest }}

      - name: Update default environment version
        uses: mikefarah/yq@v4.27.5
        with:
          cmd: |
            yq -i '.image.tag = "${{ steps.appVersion.outputs.version }}"' './chart/values.yaml'

      - name: Commit changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE_TO_COMMIT: chart/values.yaml
          DESTINATION_BRANCH: master
        run: |
          NEW_APP_VERSION="${{ steps.appVersion.outputs.version }}"
          export MESSAGE="auto: update default version to $NEW_APP_VERSION"
          export SHA=$( git rev-parse $DESTINATION_BRANCH:$FILE_TO_COMMIT )
          export CONTENT=$( base64 -i $FILE_TO_COMMIT )
          gh api --method PUT /repos/:owner/:repo/contents/$FILE_TO_COMMIT \
            --field message="$MESSAGE" \
            --field content="$CONTENT" \
            --field encoding="base64" \
            --field branch="$DESTINATION_BRANCH" \
            --field sha="$SHA"
